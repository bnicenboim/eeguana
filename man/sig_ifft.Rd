% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signal_helpers.R
\name{sig_ifft}
\alias{sig_ifft}
\title{Compute the one-dimensional inverse discrete Fourier Transform.}
\usage{
sig_ifft(x, n = NULL)
}
\arguments{
\item{x}{A vector}

\item{n}{Length of the transformed axis of the output. If \code{n} is smaller
than the length of the input, the input is cropped. If it is larger, the input
is padded with zeros. If n is not given, the length of the input along
the axis specified by axis is used.}
}
\value{
A vector
}
\description{
This function computes the inverse of the one-dimensional n-point discrete Fourier
transform computed by fft using a wrapper of \code{fft(z, inverse= TRUE)/length(z)} with
an extra argument making it similar to   \href{https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.fft.ifft.html#numpy.fft.ifft}{numpy.fft.ifft}.
For a general description of the algorithm and definitions, see \link[stats:fft]{stats::fft} and \href{https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.fft.ifft.html#numpy.fft.ifft}{numpy.fft}.
}
\details{
The input should be ordered in the same way as is returned by fft, i.e.,
(\emph{if I converted the indexes from python correctly})
\itemize{
\item \code{a[1]} should contain the zero frequency term,
\item \code{a[2:ceiling(n/2)]} should contain the positive-frequency terms,
\item \code{a[ceiling(n/2) + 2:length(a)]} should contain the negative-frequency terms,
in increasing order starting from the most negative frequency.
\item For an even number of input points, \code{a[ceiling(n/2)]} represents
the sum of the values at the positive and negative Nyquist frequencies,
as the two are aliased together. See see \href{https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.fft.ifft.html#numpy.fft.ifft}{numpy.fft} for details.
}

\strong{Notes}

If the input parameter \code{n} is larger than the size of the input,
the input is padded by appending zeros at the end. Even though this is
the common approach, it might lead to surprising results. If a different padding
is desired, it must be performed before calling ifft.
}
\examples{

a <- c(0, 4, 0, 0)
sig_ifft(a)
sig_ifft(sig_fft(a)) == a
}

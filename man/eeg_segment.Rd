% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/segmentation.R
\name{eeg_segment}
\alias{eeg_segment}
\alias{eeg_unsegment}
\title{Segment (and unsegment) an eeg_lst.}
\usage{
eeg_segment(.data, ..., .lim = c(-0.5, 0.5), .end, .unit = "s")

eeg_unsegment(
  .data,
  .start = 1,
  .sep = c(.type = "New Segment", .description = ""),
  .zero = c(.type = "Time 0", .description = "")
)
}
\arguments{
\item{.data}{An \code{eeg_lst} object.}

\item{...}{Description of the event.}

\item{.lim}{Vector indicating the time before and after the event. Or dataframe with two columns, with nrow=total number of segments}

\item{.end}{Description of the event that indicates the end of the segment, if this is used, \code{.lim} is ignored.}

\item{.unit}{"seconds" (or "s"), "milliseconds" (or "ms"), or samples.}

\item{.start}{Initial sample when an object is unsegmented}

\item{.sep}{Segment separation marker. By default: \code{.type == "New Segment"}}

\item{.zero}{Time zero marker. By default: \code{.type == "Time 0"}}
}
\value{
An \code{eeg_lst}.
}
\description{
\itemize{
\item \code{eeg_segment()} subdivides of the EEG into different segments or epochs.  (Fieldtrip calls the segment "trials".) The limits of \code{segment} are inclusive: If, for example, \code{lim = c(0,0)}, the segment would contain only sample 1.
}
}
\details{
\itemize{
\item \code{eeg_unsegment()} does \strong{not} reverse the segmentation, it simply concatenates all segments creating one object with only one segment.
}

When there is no segmentation, the \code{eeg_lst} contain one segment.
}
\examples{

# Segments 500ms before and 1000ms after the triggers s70 and s71
data_faces_10_trials \%>\% eeg_segment(.description \%in\% c("s70", "s71"),
  .lim = c(-5, 1)
)

# Segments 500ms before and  after the triggers all the triggers (which start with s)
data_faces_10_trials \%>\% eeg_segment(startsWith(.description, "s"))
}
\seealso{
Other preprocessing functions: 
\code{\link{eeg_baseline}()},
\code{\link{eeg_downsample}()},
\code{\link{eeg_ica_keep}()},
\code{\link{eeg_ica}()},
\code{\link{eeg_rereference}()},
\code{\link{filt}}
}
\concept{preprocessing functions}
